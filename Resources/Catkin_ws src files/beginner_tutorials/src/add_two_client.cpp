 #include "ros/ros.h"
 #include "beginner_tutorials/AddTwoInts.h"
 #include <cstdlib>
 
 int main(int argc, char **argv)
 {
   ros::init(argc, argv, "add_two_ints_client");
   if (argc != 3)
   {
       ROS_INFO("usage: add_two_ints_client X Y");
       return 1;
     }
   
     ros::NodeHandle n;
     ros::ServiceClient client = n.serviceClient<beginner_tutorials::AddTwoInts>("add_two_ints");
      /*
This creates a client for the add_two_ints service. The ros::ServiceClient object is used to call the service later on
*/

     beginner_tutorials::AddTwoInts srv;
     srv.request.a = atoll(argv[1]);
     srv.request.b = atoll(argv[2]);
      /*
Here we instantiate an autogenerated service class, and assign values into its request member. A service class contains two members, request and response. It also contains two class definitions, Request and Response
*/

     if (client.call(srv))
     {
       ROS_INFO("Sum: %ld", (long int)srv.response.sum);
     }
     else
     {
       ROS_ERROR("Failed to call service add_two_ints");
       return 1;
     }
      /*
This actually calls the service. Since service calls are blocking, it will return once the call is done. If the service call succeeded, call() will return true and the value in srv.response will be valid. If the call did not succeed, call() will return false and the value in srv.response will be invalid
*/
   
     return 0;
   }
